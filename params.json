{"name":"Wear 101","tagline":"Android wear code lab for FIT 2014","body":"### Welcome\r\nAs you may already know, wearable devices have arrived. We are right now being witnesses of a new era on personal computing. We are about to enter a world where we'll connected 24/7. This can be truly awesome, but can also be terryble. Being connected all the time means having to deal with a lot of information constantly, this can be very distracting, and even frustrating.\r\n\r\nThis is where wearables should be the hero, a wearable device must only be noticed when needed, and passed unnoticed the rest of the time.\r\n\r\nThis means you are at the right time to start making cool stuff with wearables, hopefully this code lab will be just the kickstart you have been waiting for.\r\n\r\nAs you already know, Android Wear is the newest platform for wearable devices from Google. It leverages on the power of the Android platform you already know. And therefore provides great compatibility with existing Android applications you have already built. \r\n\r\n#### Notifications\r\nIf your Android app uses Notifications, then chances are these notifications will show up on an Android Wear compatible device with no extra work. How awesome is that?\r\n\r\nBut, you can make a little work and improve the experience significatively. We will work on this today.\r\n\r\n### Getting Started\r\n\r\nLet's get started by downloading the code lab base code, you can find links for doing this on the right side of the page. Or just follow this [link](https://github.com/diegofigueroa/fit-wear-lab/archive/master.zip)\r\n\r\n### Designer Templates\r\nWe've crafted some handsome templates for you to use. Go ahead and continue to layouts to browse through them. You can easily go back to edit your page before publishing. After publishing your page, you can revisit the page generator and switch to another theme. Your Page content will be preserved if it remained markdown format.\r\n\r\n### Rather Drive Stick?\r\nIf you prefer to not use the automatic generator, push a branch named `gh-pages` to your repository to create a page manually. In addition to supporting regular HTML content, GitHub Pages support Jekyll, a simple, blog aware static site generator written by our own Tom Preston-Werner. Jekyll makes it easy to create site-wide headers and footers without having to copy them across every page. It also offers intelligent blog support and other advanced templating features.\r\n\r\n### Authors and Contributors\r\nYou can @mention a GitHub username to generate a link to their profile. The resulting `<a>` element will link to the contributor's GitHub Profile. For example: In 2007, Chris Wanstrath (@defunkt), PJ Hyett (@pjhyett), and Tom Preston-Werner (@mojombo) founded GitHub.\r\n\r\n### Support or Contact\r\nHaving trouble with Pages? Check out the documentation at http://help.github.com/pages or contact support@github.com and weâ€™ll help you sort it out.\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}